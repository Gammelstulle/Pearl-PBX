[messages]
;exten => _X!,1,MessageSend(sip:${EXTEN},"${CALLERID(name)}"${MESSAGE(from)})
exten => _X.,1,NoOp(SMS receiving dialplan invoked)
exten => _X.,n,NoOp(To ${MESSAGE(to)})
exten => _X.,n,NoOp(From ${MESSAGE(from)})
exten => _X.,n,NoOp(Body ${MESSAGE(body)})
exten => _X.,n,Set(ACTUALTO=${CUT(MESSAGE(to),@,1)})
exten => _X.,n,ExecIf($["${ACTUALTO}" != "sip:${EXTEN}"]?Set(ACTUALTO=sip:${EXTEN}))
exten => _X.,n,MessageSend(${ACTUALTO},${MESSAGE(from)})
exten => _X.,n,NoOp(Send status is ${MESSAGE_SEND_STATUS})
exten => _X.,n,GotoIf($["${MESSAGE_SEND_STATUS}" != "SUCCESS"]?sendfailedmsg)
exten => _X.,n,GotoIf($["${INQUEUE}" == "1"]?sendsuccessstatus)
exten => _X.,n,Hangup()
;
; Send success status 
; 
exten => _X.,n(sendsuccessstatus),NoOp(Sending SUCCESS status)
exten => _X.,n,Set(DST=${MESSAGE(from)})
exten => _X.,n,Set(SRC=${MESSAGE(to):4})
exten => _X.,n,Set(SRC2=${CUT(SRC,@,1)})
exten => _X.,n,Set(TO=${CUT(MESSAGE(to),@,1)})
exten => _X.,n,Set(MESSAGE(body)=Message to ${TO} delivered.)
exten => _X.,n,Set(MESSAGE(from)=""<${SRC2}>)
exten => _X.,n,Set(MESSAGE(to)=${DST})
exten => _X.,n,Set(ACTUALTO=${CUT(MESSAGE(to),@,1)})
exten => _X.,n,Set(ACTUALTO2=${CUT(ACTUALTO,<,2)})
exten => _X.,n,MessageSend(${ACTUALTO2},${MESSAGE(from)})
exten => _X.,n,Hangup()

;
; Handle failed messaging
exten => _X.,n(sendfailedmsg),NoOp(Sending error to user)
exten => _X.,n,Set(SRC=${MESSAGE(from)})
exten => _X.,n,Set(SRC2=${SIP_HEADER(From)})
exten => _X.,n,Set(DST=${MESSAGE(to)})
exten => _X.,n,Set(MSG=${MESSAGE(body)})
exten => _X.,n,Set(MESSAGE(body)="[${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)}] Абонент ${EXTEN} недоступен. Абонент ${EXTEN} получит сообщение как только появится в сети.")
exten => _X.,n,Set(ME_1=${CUT(MESSAGE(from),<,2)})
exten => _X.,n,Set(ACTUALFROM2=${CUT(SRC,@,1)})
exten => _X.,n,Set(ACTUALFROM3=${CUT(ACTUALFROM2,<,1)})
exten => _X.,n,Set(ACTUALFROM4=${CUT(ACTUALFROM3,',1)})
;exten => _X.,n,Set(ACTUALFROM=${CUT(ME_1,@,1)})
; Line below disabled for privacy
exten => _X.,n,MessageSend(sip:${ACTUALFROM4},"<${EXTEN}>")
exten => _X.,n,GotoIf($["${INQUEUE}" != "1"]?startq)
exten => _X.,n,Hangup()
;
exten => _X.,n(startq),NoOp(Queueing messaging for offline)
exten => _X.,n,Set(MSGTIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => _X.,n,System(/usr/bin/astqueue.sh -SRC '${MESSAGE(from)}' -DST '${DST}' -MSG '${MSGTIME} ${MSG}')
exten => _X.,n,Hangup()
exten => _X.,n(hang),Hangup()

[app-fakeanswer]
exten => _X.,1,NoCDR
exten => _X.,n,Set(DESTDEV=${EXTEN})
exten => _X.,n,Set(THISDEVSTATE=${DEVICE_STATE(SIP/${DESTDEV})})
exten => _X.,n,GotoIf($["${THISDEVSTATE}" = "UNAVAILABLE"]?hang)
exten => _X.,n,GotoIf($["${THISDEVSTATE}" = "UNKNOWN"]?hang)
exten => _X.,n,Answer
exten => _X.,n,Hangup()
exten => _X.,n(hang),Hangup()



